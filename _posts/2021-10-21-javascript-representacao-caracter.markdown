---
layout: single
title: "Javascript: representa√ß√£o de caracteres"
date: 2021-10-21 08:20:00
categories: programacao
tags: javascript unicode utf-16
---

Toda informa√ß√£o a ser interpretada pela m√°quina √© processada na forma de bits (0 e 1). Com string n√£o √© diferente. Para cada caracter em uma string, h√° um conjunto de bits e consequentemente podemos ter um c√≥digo decimal correspondente a esse conjunto.

H√° algumas tabelas de caracteres que permitam deduzir para determinado c√≥digo decimal, qual o caracter correspondente. Essas tabelas variam de acordo com a quantidade de bits que um caracter utiliza e umas das mais utilizadas (ou a mais utilizada) √© referente ao **Unicode**.

Em Javascript, todos os caracteres armazenados s√£o encontrados na tabela Unicode. Seu armazenamento segue o padr√£o **UTF-16**, que faz uso de um par de _code units_ (unidades de c√≥digo) de 16 bits cada. A maioria dos caracteres que utilizamos (em nosso idioma, por exemplo) precisa apenas de uma unidade de 16 bits para represent√°-los. Com uma unidade de 16 bits, pode-se reconhecer um pouco mais de 63.000 caracteres.
Contudo, Unicode possui uma quantidade de caracteres significativamente maior, onde uma unidade n√£o √© o suficiente, como caracteres de emoji, por exemplo (que s√£o representados por um par de unidades).

Ao percorrer os caracteres de uma string em Javascript, para identificar o c√≥digo correspondente na tabela Unicode, pode-se utilizar o m√©todo `codePointAt(0)`.

Abaixo segue um exemplo:

```javascript
let myText = "Carlos üòÅ hoje";
for (let char of myText)
  console.log(`Para o caracter ${char} seu c√≥digo √©: ${char.codePointAt(0)}.`);

// resultado
// Para o caracter C seu c√≥digo √©: 67.
// Para o caracter a seu c√≥digo √©: 97.
// Para o caracter r seu c√≥digo √©: 114.
// Para o caracter l seu c√≥digo √©: 108.
// Para o caracter o seu c√≥digo √©: 111.
// Para o caracter s seu c√≥digo √©: 115.
// Para o caracter   seu c√≥digo √©: 32.
// Para o caracter üòÅ seu c√≥digo √©: 128513.
// Para o caracter   seu c√≥digo √©: 32.
// Para o caracter h seu c√≥digo √©: 104.
// Para o caracter o seu c√≥digo √©: 111.
// Para o caracter j seu c√≥digo √©: 106.
// Para o caracter e seu c√≥digo √©: 101.
```

Refer√™ncia: [Eloquent Javascript](https://eloquentjavascript.net/)